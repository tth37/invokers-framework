apiVersion: v1
kind: ServiceAccount
metadata:
  name: invokers-sa
  namespace: invokers
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: invokers-role
  namespace: invokers
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["create", "get", "list", "watch", "delete", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: invokers-role-binding
  namespace: invokers
subjects:
- kind: ServiceAccount
  name: invokers-sa
roleRef:
  kind: Role
  name: invokers-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: invoker
  namespace: invokers
spec:
  selector:
    matchLabels:
      app: invoker
  template:
    metadata:
      labels:
        app: invoker
    spec:
      serviceAccountName: invokers-sa
      initContainers:
      - name: init
        image: docker.tth37.xyz/bitnami/kubectl:latest
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command: ["sh", "-c", "kubectl label pod $POD_NAME node=$NODE_NAME --namespace=$NAMESPACE"]
      containers:
      - name: invoker
        image: docker-registry.tth37.xyz/invoker:latest
        ports:
        - containerPort: 8080
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: invokers
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: invokers-sa
      containers:
      - name: gateway
        image: docker-registry.tth37.xyz/gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DAEMONSET_NAME
          value: invoker
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: invokers
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: gateway