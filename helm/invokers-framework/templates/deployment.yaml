apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: gateway
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      initContainers:
      - name: wait-for-invokers
        image: {{ .Values.dockerMirror }}/{{ .Values.kubectlImage }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
        - sh
        - -c
        - |
          until kubectl get daemonset {{ .Values.daemonSet.name }} --namespace=$NAMESPACE -o jsonpath='{.status.numberReady}' | \
            grep $(kubectl get daemonset {{ .Values.daemonSet.name }} --namespace=$NAMESPACE -o jsonpath='{.status.desiredNumberScheduled}'); do
            echo "Waiting for invokers to be ready..."
            sleep 5
          done
      containers:
      - name: gateway
        image: {{ .Values.dockerRegistry }}/{{ .Values.gatewayImage }}
        ports:
        - containerPort: 8080
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DAEMONSET_NAME
          value: {{ .Values.daemonSet.name }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName